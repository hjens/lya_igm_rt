Overview
The simulation package IGMtransfer_cpp is based on Peter Laursenâ€™s IGMtransfer code:
http://arxiv.org/abs/1012.2886

It adds the capability to handle periodic boundary conditions and non-random line-of-sight directions. It can also take advantage of multiple CPU cores. However, it removes the ability to have an adaptive mesh resolution.
All input and output files are on the same format as the original IGMtransfer, so there are a bunch of scripts needed to convert c2ray output to IGMtransfer input.


setup_experiment_bigbox.py
This script reads the input file experiment_bigbox.txt and runs all the other scripts to generate input data and actually run the LyA radiative transfer.


make_celldata_bigbox.f90
Needs to be compiled to a binary named make_celldata.x
This program reads a file called settings.txt containing the names of a velocity, density and ionization fraction file. It combines them into a file called CellData.bin


make_galdata_bigbox.py
This script reads a file called halo_criteria.txt and the same settings.txt as make_celldata. It reads a file containing halos, selects them based on mass and outputs a file called halos.dat
Note: the conversion constants for the simulation are set in the beginning of this file. Make sure to update this!
Note 2: this file also corrects for the random offsets to halo positions. This procedure needs to be modified depending on the simulaton. See line 59


IGMTransfer_cpp
This is the main simulation. It reads the halo and IGM files and calculates the LyA radiative transfer. Compile it using the supplied Makefile.
The output is one binary file containing the optical depth for every galaxy and wavelength. It is written in Fortran style with record separators.


PyProcessIGM_gmg.py
This file reads the output from IGMTransfer, which gives the transmission functions. It then takes an assumed intrinsic line model and multiplies it with the transmission function to get the transmitted fraction of LyA.
